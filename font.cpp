//=============================================================================
//
// font.cpp
// Author : tanimoto kosuke
//
//=============================================================================

//=============================================================================
//インクルードファイル
//=============================================================================
#include "font.h"

//ひらがなセット
std::map<std::string, int> CFont::m_hiraganaData = 
{
	{ "あ", 0 },{ "い", 1 },{ "う", 2 },{ "え", 3 },{ "お", 4 },
	{ "か", 5 },{ "き", 6 },{ "く", 7 },{ "け", 8 },{ "こ", 9 },
	{ "さ", 10 },{ "し", 11 },{ "す", 12 },{ "せ", 13 },{ "そ", 14 },
	{ "た", 15 },{ "ち", 16 },{ "つ", 17 },{ "て", 18 },{ "と", 19 },
	{ "な", 20 },{ "に", 21 },{ "ぬ", 22 },{ "ね", 23 },{ "の", 24 },
	{ "は", 25 },{ "ひ", 26 },{ "ふ", 27 },{ "へ", 28 },{ "ほ", 29 },
	{ "ま", 30 },{ "み", 31 },{ "む", 32 },{ "め", 33 },{ "も", 34 },
	{ "や", 35 },{ "ゆ", 36 },{ "よ", 37 },{ "、", 38 },{ "。", 39 },
	{ "ら", 40 },{ "り", 41 },{ "る", 42 },{ "れ", 43 },{ "ろ", 44 },
	{ "わ", 45 },{ "を", 46 },{ "ん", 47 },{ "ー", 48 },{ "・", 49 },
	{ "が", 50 },{ "ぎ", 51 },{ "ぐ", 52 },{ "げ", 53 },{ "ご", 54 },
};
//=====================================
// デフォルトコンストラクタ
//=====================================
CFont::CFont()
{

}

CFont::CFont(const int nPriority) : CObject_2D::CObject_2D(nPriority)
{

}

//=====================================
// デストラクタ
//=====================================
CFont::~CFont()
{

}

//=====================================
// 初期化処理
//=====================================
HRESULT CFont::Init(void)
{
	//基本クラスの初期化処理
	if (FAILED(CObject_2D::Init()))
	{
		return -1;
	}

	return S_OK;
}


//=====================================
// 終了処理
//=====================================
void CFont::Uninit(void)
{
	//基本クラスの終了処理
	CObject_2D::Uninit();
}

//=====================================
// 更新処理
//=====================================
void CFont::Update(void)
{
	//基本クラスの更新処理
	CObject_2D::Update();
}


//=====================================
// 描画処理
//=====================================
void CFont::Draw(void)
{
	//基本クラスの描画処理
	CObject_2D::Draw();
}

//=====================================
// 生成処理
//=====================================
CFont* CFont::Create(const D3DXVECTOR2 addPos, const D3DXVECTOR2 size, const std::string str, const int nPriority, int nCnt, int nMax)
{
	CFont* pFont = new CFont(nPriority);

	if (FAILED(pFont->Init()))
	{
		return nullptr;
	}
	int nTex = m_hiraganaData[str];

	pFont->SetSize(size);									//サイズの設定
	float fSize = pFont->GetSize().x * 2;
	pFont->SetPos(D3DXVECTOR3((SCREEN_WIDTH / 2 - (nMax * fSize) * 0.5) + (nCnt * fSize) + addPos.x, 300.0f + addPos.y, 0.0f) );

	pFont->SetTexture(CObject::TEXTURE_HIRAGANA);			//テクスチャの設定
	pFont->SetTextureParameter(100, 10, 10, INT_MAX);		//テクスチャパラメータの設定
	pFont->SetAnimPattern(nTex);
	return pFont;
}